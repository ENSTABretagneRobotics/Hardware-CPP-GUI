cmake_minimum_required(VERSION 2.8...3.16)

project(hardwaregui)

option(_DEBUG "_DEBUG" OFF)
option(_DEBUG_DISPLAY "_DEBUG_DISPLAY" OFF)
option(_DEBUG_MESSAGES "_DEBUG_MESSAGES" OFF)
option(_DEBUG_WARNINGS "_DEBUG_WARNINGS" OFF)

if(APPLE)
	option(USE_OLD_CHRONO "USE_OLD_CHRONO" ON)
	option(ENABLE_COMPUTERI2CBUS_SUPPORT "ENABLE_COMPUTERI2CBUS_SUPPORT" OFF)
else()
	option(USE_OLD_CHRONO "USE_OLD_CHRONO" OFF)
	option(ENABLE_COMPUTERI2CBUS_SUPPORT "ENABLE_COMPUTERI2CBUS_SUPPORT" ON)
endif()

mark_as_advanced(_DEBUG _DEBUG_DISPLAY _DEBUG_MESSAGES _DEBUG_WARNINGS ENABLE_COMPUTERI2CBUS_SUPPORT)

if(_DEBUG)
	add_definitions(-D _DEBUG)
endif()

if(_DEBUG_DISPLAY)
	add_definitions(-D _DEBUG_DISPLAY)
endif()

if(_DEBUG_MESSAGES)
	add_definitions(-D _DEBUG_MESSAGES)
endif()

if(_DEBUG_WARNINGS)
	add_definitions(-D _DEBUG_WARNINGS)
endif()

if(USE_OLD_CHRONO)
	add_definitions(-D USE_OLD_CHRONO)
endif()
	
add_definitions(-D DISABLE_THREADS_OSNET)
add_definitions(-D SIMULATED_INTERNET_SWARMONDEVICE)
add_definitions(-D DISABLE_AIS_SUPPORT)
add_definitions(-D ENABLE_DEFAULT_SAVE_RAW_DATA_MDM)
add_definitions(-D DISABLE_HOKUYOTHREAD)
add_definitions(-D DISABLE_IM483ITHREAD)
add_definitions(-D DISABLE_MDMTHREAD)
add_definitions(-D DISABLE_MESTHREAD)
add_definitions(-D DISABLE_MINISSCTHREAD)
add_definitions(-D DISABLE_MS5837THREAD)
add_definitions(-D DISABLE_MTTHREAD)
add_definitions(-D DISABLE_NMEADEVICETHREAD)
add_definitions(-D DISABLE_P33XTHREAD)
add_definitions(-D DISABLE_PATHFINDERDVLTHREAD)
add_definitions(-D DISABLE_POLOLUTHREAD)
add_definitions(-D DISABLE_RAZORAHRSTHREAD)
add_definitions(-D DISABLE_ROBOTEQTHREAD)
add_definitions(-D DISABLE_RPLIDARTHREAD)
add_definitions(-D DISABLE_SBGTHREAD)
add_definitions(-D DISABLE_SEANETTHREAD)
add_definitions(-D DISABLE_SSC32THREAD)
add_definitions(-D DISABLE_SWARMONDEVICETHREAD)
add_definitions(-D DISABLE_UBLOXTHREAD)
add_definitions(-D DISABLE_VELODYNETHREAD)

if(ENABLE_COMPUTERI2CBUS_SUPPORT)
	add_definitions(-D ENABLE_COMPUTERI2CBUS_SUPPORT)
endif()

add_executable(hardwaregui Main.cpp OSTime.c OSNet.c OSMisc.c OSCore.c)

find_package(OpenCV)
target_include_directories(hardwaregui PRIVATE ${OpenCV_INCLUDE_DIRS})
if(OpenCV_VERSION VERSION_LESS "4")
else()
	target_compile_features(hardwaregui PRIVATE cxx_std_11)
endif()
if(MINGW)
	message(STATUS "You might need to set CMake variables OpenCV_ARCH=x86 (or e.g. x64) and OpenCV_RUNTIME=mingw (or e.g. mingw7) if OpenCV mixes 64 bit libraries with the 32 bit compiler or cannot find the correct versions...")
endif()

target_compile_options(hardwaregui PRIVATE
  $<$<CXX_COMPILER_ID:MSVC>:/W4>
  $<$<NOT:$<CXX_COMPILER_ID:MSVC>>:-Wall -Wextra -Wpedantic>
)

if(WIN32)
	if(MSVC)
		set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /W4")
		set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /W4")
		target_link_libraries(hardwaregui ${OpenCV_LIBS} WS2_32)
	else()
		set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -Wno-unknown-pragmas -Wextra")
		set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wno-unknown-pragmas -Wextra -fpermissive")
		target_link_libraries(hardwaregui ${OpenCV_LIBS} WS2_32 m)
	endif()
else()
	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -Wno-unknown-pragmas -Wextra")
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wno-unknown-pragmas -Wextra -fpermissive")
	if(APPLE)
		target_link_libraries(hardwaregui ${OpenCV_LIBS} m)
	else()
		target_link_libraries(hardwaregui ${OpenCV_LIBS} rt m)
	endif()
endif()
